//'require' syntax because of node
const { GraphQLServer } = require('graphql-yoga');
//import mongoose to gain access to mongodb
const mongoose = require('mongoose');
//make connection to mongodb database, named test
mongoose.connect('mongodb://localhost/test');
// mongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});

//mongoose schema
const Todo = new mongoose.model('Todo', {
  text: String,
  complete: Boolean
});

//GraphQL schema
//type Query, with hello taking one argument - to look up
//type Mutation, - to change, update, delete 
//name->name of the arg; String-> datatype; 
//String!-> return type, the exclamation means its mandatory to pass something in
//id is a Mongo field added by default (autogenerated), special type for graphQL is ID
const typeDefs = `
  type Query {
    hello(name: String): String!
    todos: [Todo]
  }
  type Todo {
    id: ID!      
    text: String!
    complete: Boolean!
  }
  type Mutation {
    createTodo(text: String!): Todo
    updateTodo(id: ID!, complete: Boolean!): Boolean
    removeTodo(id: ID!): Boolean
  }
`;
//resolver functions
//Query->hello, 1st param is the parent, destructure 2nd param
//make functions async
const resolvers = {
  Query: {
    hello: (_, { name }) => `Hello ${name || "World"}`,
    todos: () => Todo.find()
  },
  Mutation: {
    createTodo: async (_, { text }) => {
      //create instance of Todo, save to db with promise, then return todo
      const todo = new Todo( { text, complete: false });
      await todo.save();
      return todo;
    },
    updateTodo: async (_, {id, complete }) => {
      await Todo.findByIdAndUpdate(id, {complete} );
      return true;
    },
    removeTodo: async (_, {id}) => {
      await Todo.findByIdAndRemove(id);
      return true;
    }
  }
}

//specify the typeDefs and resolvers; server.start to start server
const server = new GraphQLServer({ typeDefs, resolvers })
//test the database is running on localhost
mongoose.connection.once('open', function() {
  // we're connected!
  server.start(() => console.log('Server is running on localhost:4000'))
});